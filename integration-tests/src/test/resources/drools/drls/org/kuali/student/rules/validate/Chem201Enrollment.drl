/*
 * Copyright 2007 The Kuali Foundation
 *
 * Licensed under the Educational Community License, Version 1.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.opensource.org/licenses/ecl1.php
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.kuali.student.rules.drools.drls.course_co_req_chem

import java.util.*;
import org.kuali.student.rules.internal.common.entity.ComparisonOperator;
import org.kuali.student.rules.internal.common.statement.*;
import org.kuali.student.rules.internal.common.facts.CourseEnrollmentRequest;
import org.kuali.student.rules.util.FactContainer;
import org.kuali.student.rules.util.FactContainer.State;

rule "Chem201_INIT" //ruleflow-group "Chem201"
    no-loop true
    lock-on-active true
    when
        cont : FactContainer( id == "Chem201", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
        System.out.println("Rule name: "+drools.getRule().getName());
        SubsetProposition propositionA = new SubsetProposition("A", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM101".split("\\s*,\\s*"))),  req.getLuiIds() );
        propositionA.apply();
        prop.addProposition(propositionA);

        SubsetProposition propositionB = new SubsetProposition("B", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH102".split("\\s*,\\s*"))),  req.getLuiIds() );
        propositionB.apply();
        prop.addProposition(propositionB);

        cont.setState(FactContainer.State.DONE);

        update(cont);
end

rule "Chem201" //ruleflow-group "Chem201"
    no-loop true
    when
        FactContainer( id == "Chem201", state == FactContainer.State.DONE, prop : propositionContainer )
        Proposition( propositionName == "A" && result == true ) from prop.propositions
        Proposition( propositionName == "B" && result == true ) from prop.propositions 
    then
        System.out.println("Rule name: "+drools.getRule().getName());
        System.out.println("A="+prop.getProposition("A").getResult() );
        System.out.println("B="+prop.getProposition("B").getResult() );
        prop.setRuleResult(true);
end
