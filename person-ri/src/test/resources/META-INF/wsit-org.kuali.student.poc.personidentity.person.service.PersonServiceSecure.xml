<?xml version="1.0" encoding="UTF-8"?><!-- Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.4-hudson-396-SNAPSHOT. --><!-- Generated by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.4-hudson-396-SNAPSHOT. -->
<definitions
	xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"
	xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
	xmlns:tns="http://student.kuali.org/poc/wsdl/personidentity/person"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns="http://schemas.xmlsoap.org/wsdl/"
	targetNamespace="http://student.kuali.org/poc/wsdl/personidentity/person"
	name="PersonServiceSecure"
	xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy"
	xmlns:wsaws="http://www.w3.org/2005/08/addressing"
	xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"
	xmlns:sc="http://schemas.sun.com/2006/03/wss/server"
	xmlns:wspp="http://java.sun.com/xml/ns/wsit/policy">	
	<types>
		<xsd:schema>
			<xsd:import
				namespace="http://student.kuali.org/poc/wsdl/personidentity/person"
				schemaLocation="http://localhost:9999/personidentity/PersonServiceSecure?xsd=1">
			</xsd:import>
		</xsd:schema>
		<xsd:schema>
			<xsd:import
				namespace="http://exceptions.personidentity.wsdl.poc.student.kuali.org/"
				schemaLocation="http://localhost:9999/personidentity/PersonServiceSecure?xsd=2">
			</xsd:import>
		</xsd:schema>
	</types>
	<message name="createPerson">
		<part name="parameters" element="tns:createPerson"></part>
	</message>
	<message name="createPersonResponse">
		<part name="parameters" element="tns:createPersonResponse"></part>
	</message>
	<message name="AlreadyExistsException">
		<part name="fault" element="tns:AlreadyExistsException"></part>
	</message>
	<message name="InvalidParameterException">
		<part name="fault" element="tns:InvalidParameterException"></part>
	</message>
	<message name="MissingParameterException">
		<part name="fault" element="tns:MissingParameterException"></part>
	</message>
	<message name="OperationFailedException">
		<part name="fault" element="tns:OperationFailedException"></part>
	</message>
	<message name="PermissionDeniedException">
		<part name="fault" element="tns:PermissionDeniedException"></part>
	</message>
	<message name="fetchPersonType">
		<part name="parameters" element="tns:fetchPersonType"></part>
	</message>
	<message name="fetchPersonTypeResponse">
		<part name="parameters" element="tns:fetchPersonTypeResponse"></part>
	</message>
	<message name="DoesNotExistException">
		<part name="fault" element="tns:DoesNotExistException"></part>
	</message>
	<message name="createPersonAttributeSetType">
		<part name="parameters"
			element="tns:createPersonAttributeSetType">
		</part>
	</message>
	<message name="createPersonAttributeSetTypeResponse">
		<part name="parameters"
			element="tns:createPersonAttributeSetTypeResponse">
		</part>
	</message>
	<message name="updatePerson">
		<part name="parameters" element="tns:updatePerson"></part>
	</message>
	<message name="updatePersonResponse">
		<part name="parameters" element="tns:updatePersonResponse"></part>
	</message>
	<message name="DisabledIdentifierException">
		<part name="fault" element="tns:DisabledIdentifierException"></part>
	</message>
	<message name="ReadOnlyException">
		<part name="fault" element="tns:ReadOnlyException"></part>
	</message>
	<message name="findPersonAttributeSetTypes">
		<part name="parameters"
			element="tns:findPersonAttributeSetTypes">
		</part>
	</message>
	<message name="findPersonAttributeSetTypesResponse">
		<part name="parameters"
			element="tns:findPersonAttributeSetTypesResponse">
		</part>
	</message>
	<message name="findPersonTypes">
		<part name="parameters" element="tns:findPersonTypes"></part>
	</message>
	<message name="findPersonTypesResponse">
		<part name="parameters" element="tns:findPersonTypesResponse"></part>
	</message>
	<message name="deletePerson">
		<part name="parameters" element="tns:deletePerson"></part>
	</message>
	<message name="deletePersonResponse">
		<part name="parameters" element="tns:deletePersonResponse"></part>
	</message>
	<message name="fetchPersonAttributeSetType">
		<part name="parameters"
			element="tns:fetchPersonAttributeSetType">
		</part>
	</message>
	<message name="fetchPersonAttributeSetTypeResponse">
		<part name="parameters"
			element="tns:fetchPersonAttributeSetTypeResponse">
		</part>
	</message>
	<message name="assignPersonType">
		<part name="parameters" element="tns:assignPersonType"></part>
	</message>
	<message name="assignPersonTypeResponse">
		<part name="parameters"
			element="tns:assignPersonTypeResponse">
		</part>
	</message>
	<message name="createAttributeDefinition">
		<part name="parameters"
			element="tns:createAttributeDefinition">
		</part>
	</message>
	<message name="createAttributeDefinitionResponse">
		<part name="parameters"
			element="tns:createAttributeDefinitionResponse">
		</part>
	</message>
	<message name="createPersonTypeInfo">
		<part name="parameters" element="tns:createPersonTypeInfo"></part>
	</message>
	<message name="createPersonTypeInfoResponse">
		<part name="parameters"
			element="tns:createPersonTypeInfoResponse">
		</part>
	</message>
	<message name="fetchFullPersonInfo">
		<part name="parameters" element="tns:fetchFullPersonInfo"></part>
	</message>
	<message name="fetchFullPersonInfoResponse">
		<part name="parameters"
			element="tns:fetchFullPersonInfoResponse">
		</part>
	</message>
	<message name="fetchPersonInfoByPersonAttributeSetTypes">
		<part name="parameters"
			element="tns:fetchPersonInfoByPersonAttributeSetTypes">
		</part>
	</message>
	<message name="fetchPersonInfoByPersonAttributeSetTypesResponse">
		<part name="parameters"
			element="tns:fetchPersonInfoByPersonAttributeSetTypesResponse">
		</part>
	</message>
	<message name="fetchPersonInfoByPersonType">
		<part name="parameters"
			element="tns:fetchPersonInfoByPersonType">
		</part>
	</message>
	<message name="fetchPersonInfoByPersonTypeResponse">
		<part name="parameters"
			element="tns:fetchPersonInfoByPersonTypeResponse">
		</part>
	</message>
	<message name="findCreatablePersonTypes">
		<part name="parameters"
			element="tns:findCreatablePersonTypes">
		</part>
	</message>
	<message name="findCreatablePersonTypesResponse">
		<part name="parameters"
			element="tns:findCreatablePersonTypesResponse">
		</part>
	</message>
	<message name="findPersonAttributeSetTypesForPerson">
		<part name="parameters"
			element="tns:findPersonAttributeSetTypesForPerson">
		</part>
	</message>
	<message name="findPersonAttributeSetTypesForPersonResponse">
		<part name="parameters"
			element="tns:findPersonAttributeSetTypesForPersonResponse">
		</part>
	</message>
	<message name="findPersonAttributeSetTypesForPersonType">
		<part name="parameters"
			element="tns:findPersonAttributeSetTypesForPersonType">
		</part>
	</message>
	<message name="findPersonAttributeSetTypesForPersonTypeResponse">
		<part name="parameters"
			element="tns:findPersonAttributeSetTypesForPersonTypeResponse">
		</part>
	</message>
	<message name="findPersonIdsForPersonType">
		<part name="parameters"
			element="tns:findPersonIdsForPersonType">
		</part>
	</message>
	<message name="findPersonIdsForPersonTypeResponse">
		<part name="parameters"
			element="tns:findPersonIdsForPersonTypeResponse">
		</part>
	</message>
	<message name="findPersonTypesForPerson">
		<part name="parameters"
			element="tns:findPersonTypesForPerson">
		</part>
	</message>
	<message name="findPersonTypesForPersonResponse">
		<part name="parameters"
			element="tns:findPersonTypesForPersonResponse">
		</part>
	</message>
	<message name="isPersonType">
		<part name="parameters" element="tns:isPersonType"></part>
	</message>
	<message name="isPersonTypeResponse">
		<part name="parameters" element="tns:isPersonTypeResponse"></part>
	</message>
	<message name="searchForPeopleByPersonType">
		<part name="parameters"
			element="tns:searchForPeopleByPersonType">
		</part>
	</message>
	<message name="searchForPeopleByPersonTypeResponse">
		<part name="parameters"
			element="tns:searchForPeopleByPersonTypeResponse">
		</part>
	</message>
	<message name="validatePersonInfoForPersonType">
		<part name="parameters"
			element="tns:validatePersonInfoForPersonType">
		</part>
	</message>
	<message name="validatePersonInfoForPersonTypeResponse">
		<part name="parameters"
			element="tns:validatePersonInfoForPersonTypeResponse">
		</part>
	</message>
	<message name="fetchReplacementPersonId">
		<part name="parameters"
			element="tns:fetchReplacementPersonId">
		</part>
	</message>
	<message name="fetchReplacementPersonIdResponse">
		<part name="parameters"
			element="tns:fetchReplacementPersonIdResponse">
		</part>
	</message>
	<message name="removePersonType">
		<part name="parameters" element="tns:removePersonType"></part>
	</message>
	<message name="removePersonTypeResponse">
		<part name="parameters"
			element="tns:removePersonTypeResponse">
		</part>
	</message>
	<message name="searchForPeople">
		<part name="parameters" element="tns:searchForPeople"></part>
	</message>
	<message name="searchForPeopleResponse">
		<part name="parameters" element="tns:searchForPeopleResponse"></part>
	</message>
	<message name="searchForPeopleByPersonAttributeSetType">
		<part name="parameters"
			element="tns:searchForPeopleByPersonAttributeSetType">
		</part>
	</message>
	<message name="searchForPeopleByPersonAttributeSetTypeResponse">
		<part name="parameters"
			element="tns:searchForPeopleByPersonAttributeSetTypeResponse">
		</part>
	</message>
	<message name="searchForPersonIds">
		<part name="parameters" element="tns:searchForPersonIds"></part>
	</message>
	<message name="searchForPersonIdsResponse">
		<part name="parameters"
			element="tns:searchForPersonIdsResponse">
		</part>
	</message>
	<message name="createPersonRelation">
		<part name="parameters" element="tns:createPersonRelation"></part>
	</message>
	<message name="createPersonRelationResponse">
		<part name="parameters"
			element="tns:createPersonRelationResponse">
		</part>
	</message>
	<message name="CircularReferenceException">
		<part name="fault" element="tns:CircularReferenceException"></part>
	</message>
	<message name="updatePersonRelation">
		<part name="parameters" element="tns:updatePersonRelation"></part>
	</message>
	<message name="updatePersonRelationResponse">
		<part name="parameters"
			element="tns:updatePersonRelationResponse">
		</part>
	</message>
	<message name="deletePersonRelation">
		<part name="parameters" element="tns:deletePersonRelation"></part>
	</message>
	<message name="deletePersonRelationResponse">
		<part name="parameters"
			element="tns:deletePersonRelationResponse">
		</part>
	</message>
	<message name="fetchPersonRelation">
		<part name="parameters" element="tns:fetchPersonRelation"></part>
	</message>
	<message name="fetchPersonRelationResponse">
		<part name="parameters"
			element="tns:fetchPersonRelationResponse">
		</part>
	</message>
	<message name="fetchPersonRelationTypes">
		<part name="parameters"
			element="tns:fetchPersonRelationTypes">
		</part>
	</message>
	<message name="fetchPersonRelationTypesResponse">
		<part name="parameters"
			element="tns:fetchPersonRelationTypesResponse">
		</part>
	</message>
	<message name="findPersonPersonRelationIds">
		<part name="parameters"
			element="tns:findPersonPersonRelationIds">
		</part>
	</message>
	<message name="findPersonPersonRelationIdsResponse">
		<part name="parameters"
			element="tns:findPersonPersonRelationIdsResponse">
		</part>
	</message>
	<message name="findPersonRelations">
		<part name="parameters" element="tns:findPersonRelations"></part>
	</message>
	<message name="findPersonRelationsResponse">
		<part name="parameters"
			element="tns:findPersonRelationsResponse">
		</part>
	</message>
	<message name="searchForPersonIdsByRelation">
		<part name="parameters"
			element="tns:searchForPersonIdsByRelation">
		</part>
	</message>
	<message name="searchForPersonIdsByRelationResponse">
		<part name="parameters"
			element="tns:searchForPersonIdsByRelationResponse">
		</part>
	</message>
	<message name="searchForPersonRelations">
		<part name="parameters"
			element="tns:searchForPersonRelations">
		</part>
	</message>
	<message name="searchForPersonRelationsResponse">
		<part name="parameters"
			element="tns:searchForPersonRelationsResponse">
		</part>
	</message>
	<message name="searchForPeopleByRelation">
		<part name="parameters"
			element="tns:searchForPeopleByRelation">
		</part>
	</message>
	<message name="searchForPeopleByRelationResponse">
		<part name="parameters"
			element="tns:searchForPeopleByRelationResponse">
		</part>
	</message>
	<portType name="PersonService">
		<operation name="createPerson">
			<input message="tns:createPerson"></input>
			<output message="tns:createPersonResponse"></output>
			<fault message="tns:AlreadyExistsException"
				name="AlreadyExistsException">
			</fault>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="fetchPersonType">
			<input message="tns:fetchPersonType"></input>
			<output message="tns:fetchPersonTypeResponse"></output>
			<fault message="tns:DoesNotExistException"
				name="DoesNotExistException">
			</fault>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
		</operation>
		<operation name="createPersonAttributeSetType">
			<input message="tns:createPersonAttributeSetType"></input>
			<output
				message="tns:createPersonAttributeSetTypeResponse">
			</output>
			<fault message="tns:AlreadyExistsException"
				name="AlreadyExistsException">
			</fault>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="updatePerson">
			<input message="tns:updatePerson"></input>
			<output message="tns:updatePersonResponse"></output>
			<fault message="tns:DoesNotExistException"
				name="DoesNotExistException">
			</fault>
			<fault message="tns:DisabledIdentifierException"
				name="DisabledIdentifierException">
			</fault>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:ReadOnlyException"
				name="ReadOnlyException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="findPersonAttributeSetTypes">
			<input message="tns:findPersonAttributeSetTypes"></input>
			<output message="tns:findPersonAttributeSetTypesResponse"></output>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
		</operation>
		<operation name="findPersonTypes">
			<input message="tns:findPersonTypes"></input>
			<output message="tns:findPersonTypesResponse"></output>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
		</operation>
		<operation name="deletePerson">
			<input message="tns:deletePerson"></input>
			<output message="tns:deletePersonResponse"></output>
			<fault message="tns:DoesNotExistException"
				name="DoesNotExistException">
			</fault>
			<fault message="tns:DisabledIdentifierException"
				name="DisabledIdentifierException">
			</fault>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="fetchPersonAttributeSetType">
			<input message="tns:fetchPersonAttributeSetType"></input>
			<output message="tns:fetchPersonAttributeSetTypeResponse"></output>
			<fault message="tns:DoesNotExistException"
				name="DoesNotExistException">
			</fault>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
		</operation>
		<operation name="assignPersonType">
			<input message="tns:assignPersonType"></input>
			<output message="tns:assignPersonTypeResponse"></output>
			<fault message="tns:AlreadyExistsException"
				name="AlreadyExistsException">
			</fault>
			<fault message="tns:DisabledIdentifierException"
				name="DisabledIdentifierException">
			</fault>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="createAttributeDefinition">
			<input message="tns:createAttributeDefinition"></input>
			<output message="tns:createAttributeDefinitionResponse"></output>
			<fault message="tns:AlreadyExistsException"
				name="AlreadyExistsException">
			</fault>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="createPersonTypeInfo">
			<input message="tns:createPersonTypeInfo"></input>
			<output message="tns:createPersonTypeInfoResponse"></output>
			<fault message="tns:AlreadyExistsException"
				name="AlreadyExistsException">
			</fault>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="fetchFullPersonInfo">
			<input message="tns:fetchFullPersonInfo"></input>
			<output message="tns:fetchFullPersonInfoResponse"></output>
			<fault message="tns:DoesNotExistException"
				name="DoesNotExistException">
			</fault>
			<fault message="tns:DisabledIdentifierException"
				name="DisabledIdentifierException">
			</fault>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="fetchPersonInfoByPersonAttributeSetTypes">
			<input
				message="tns:fetchPersonInfoByPersonAttributeSetTypes">
			</input>
			<output
				message="tns:fetchPersonInfoByPersonAttributeSetTypesResponse">
			</output>
			<fault message="tns:DoesNotExistException"
				name="DoesNotExistException">
			</fault>
			<fault message="tns:DisabledIdentifierException"
				name="DisabledIdentifierException">
			</fault>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="fetchPersonInfoByPersonType">
			<input message="tns:fetchPersonInfoByPersonType"></input>
			<output message="tns:fetchPersonInfoByPersonTypeResponse"></output>
			<fault message="tns:DoesNotExistException"
				name="DoesNotExistException">
			</fault>
			<fault message="tns:DisabledIdentifierException"
				name="DisabledIdentifierException">
			</fault>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="findCreatablePersonTypes">
			<input message="tns:findCreatablePersonTypes"></input>
			<output message="tns:findCreatablePersonTypesResponse"></output>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
		</operation>
		<operation name="findPersonAttributeSetTypesForPerson">
			<input message="tns:findPersonAttributeSetTypesForPerson"></input>
			<output
				message="tns:findPersonAttributeSetTypesForPersonResponse">
			</output>
			<fault message="tns:DoesNotExistException"
				name="DoesNotExistException">
			</fault>
			<fault message="tns:DisabledIdentifierException"
				name="DisabledIdentifierException">
			</fault>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="findPersonAttributeSetTypesForPersonType">
			<input
				message="tns:findPersonAttributeSetTypesForPersonType">
			</input>
			<output
				message="tns:findPersonAttributeSetTypesForPersonTypeResponse">
			</output>
			<fault message="tns:DoesNotExistException"
				name="DoesNotExistException">
			</fault>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
		</operation>
		<operation name="findPersonIdsForPersonType">
			<input message="tns:findPersonIdsForPersonType"></input>
			<output message="tns:findPersonIdsForPersonTypeResponse"></output>
			<fault message="tns:DoesNotExistException"
				name="DoesNotExistException">
			</fault>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="findPersonTypesForPerson">
			<input message="tns:findPersonTypesForPerson"></input>
			<output message="tns:findPersonTypesForPersonResponse"></output>
			<fault message="tns:DoesNotExistException"
				name="DoesNotExistException">
			</fault>
			<fault message="tns:DisabledIdentifierException"
				name="DisabledIdentifierException">
			</fault>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="isPersonType">
			<input message="tns:isPersonType"></input>
			<output message="tns:isPersonTypeResponse"></output>
			<fault message="tns:DoesNotExistException"
				name="DoesNotExistException">
			</fault>
			<fault message="tns:DisabledIdentifierException"
				name="DisabledIdentifierException">
			</fault>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="searchForPeopleByPersonType">
			<input message="tns:searchForPeopleByPersonType"></input>
			<output message="tns:searchForPeopleByPersonTypeResponse"></output>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="validatePersonInfoForPersonType">
			<input message="tns:validatePersonInfoForPersonType"></input>
			<output
				message="tns:validatePersonInfoForPersonTypeResponse">
			</output>
			<fault message="tns:DoesNotExistException"
				name="DoesNotExistException">
			</fault>
			<fault message="tns:DisabledIdentifierException"
				name="DisabledIdentifierException">
			</fault>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="fetchReplacementPersonId">
			<input message="tns:fetchReplacementPersonId"></input>
			<output message="tns:fetchReplacementPersonIdResponse"></output>
			<fault message="tns:DoesNotExistException"
				name="DoesNotExistException">
			</fault>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="removePersonType">
			<input message="tns:removePersonType"></input>
			<output message="tns:removePersonTypeResponse"></output>
			<fault message="tns:DoesNotExistException"
				name="DoesNotExistException">
			</fault>
			<fault message="tns:DisabledIdentifierException"
				name="DisabledIdentifierException">
			</fault>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="searchForPeople">
			<input message="tns:searchForPeople"></input>
			<output message="tns:searchForPeopleResponse"></output>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="searchForPeopleByPersonAttributeSetType">
			<input
				message="tns:searchForPeopleByPersonAttributeSetType">
			</input>
			<output
				message="tns:searchForPeopleByPersonAttributeSetTypeResponse">
			</output>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="searchForPersonIds">
			<input message="tns:searchForPersonIds"></input>
			<output message="tns:searchForPersonIdsResponse"></output>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="createPersonRelation">
			<input message="tns:createPersonRelation"></input>
			<output message="tns:createPersonRelationResponse"></output>
			<fault message="tns:AlreadyExistsException"
				name="AlreadyExistsException">
			</fault>
			<fault message="tns:DoesNotExistException"
				name="DoesNotExistException">
			</fault>
			<fault message="tns:CircularReferenceException"
				name="CircularReferenceException">
			</fault>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="updatePersonRelation">
			<input message="tns:updatePersonRelation"></input>
			<output message="tns:updatePersonRelationResponse"></output>
			<fault message="tns:DoesNotExistException"
				name="DoesNotExistException">
			</fault>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:ReadOnlyException"
				name="ReadOnlyException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="deletePersonRelation">
			<input message="tns:deletePersonRelation"></input>
			<output message="tns:deletePersonRelationResponse"></output>
			<fault message="tns:DoesNotExistException"
				name="DoesNotExistException">
			</fault>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="fetchPersonRelation">
			<input message="tns:fetchPersonRelation"></input>
			<output message="tns:fetchPersonRelationResponse"></output>
			<fault message="tns:DoesNotExistException"
				name="DoesNotExistException">
			</fault>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="fetchPersonRelationTypes">
			<input message="tns:fetchPersonRelationTypes"></input>
			<output message="tns:fetchPersonRelationTypesResponse"></output>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
		</operation>
		<operation name="findPersonPersonRelationIds">
			<input message="tns:findPersonPersonRelationIds"></input>
			<output message="tns:findPersonPersonRelationIdsResponse"></output>
			<fault message="tns:DoesNotExistException"
				name="DoesNotExistException">
			</fault>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="findPersonRelations">
			<input message="tns:findPersonRelations"></input>
			<output message="tns:findPersonRelationsResponse"></output>
			<fault message="tns:DoesNotExistException"
				name="DoesNotExistException">
			</fault>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="searchForPersonIdsByRelation">
			<input message="tns:searchForPersonIdsByRelation"></input>
			<output
				message="tns:searchForPersonIdsByRelationResponse">
			</output>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="searchForPersonRelations">
			<input message="tns:searchForPersonRelations"></input>
			<output message="tns:searchForPersonRelationsResponse"></output>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
		<operation name="searchForPeopleByRelation">
			<input message="tns:searchForPeopleByRelation"></input>
			<output message="tns:searchForPeopleByRelationResponse"></output>
			<fault message="tns:InvalidParameterException"
				name="InvalidParameterException">
			</fault>
			<fault message="tns:MissingParameterException"
				name="MissingParameterException">
			</fault>
			<fault message="tns:OperationFailedException"
				name="OperationFailedException">
			</fault>
			<fault message="tns:PermissionDeniedException"
				name="PermissionDeniedException">
			</fault>
		</operation>
	</portType>
	<binding name="PersonServiceSecureBinding"
		type="tns:PersonService">
		<wsp:PolicyReference URI="#ClassBindingPolicy" />
		<soap:binding transport="http://schemas.xmlsoap.org/soap/http"
			style="document"></soap:binding>
		<operation name="createPerson">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="AlreadyExistsException">
				<soap:fault name="AlreadyExistsException"
					use="literal"></soap:fault>
			</fault>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="fetchPersonType">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="DoesNotExistException">
				<soap:fault name="DoesNotExistException"
					use="literal"></soap:fault>
			</fault>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="createPersonAttributeSetType">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="AlreadyExistsException">
				<soap:fault name="AlreadyExistsException"
					use="literal"></soap:fault>
			</fault>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="updatePerson">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="DoesNotExistException">
				<soap:fault name="DoesNotExistException"
					use="literal"></soap:fault>
			</fault>
			<fault name="DisabledIdentifierException">
				<soap:fault name="DisabledIdentifierException"
					use="literal"></soap:fault>
			</fault>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="ReadOnlyException">
				<soap:fault name="ReadOnlyException" use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="findPersonAttributeSetTypes">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="findPersonTypes">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="deletePerson">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="DoesNotExistException">
				<soap:fault name="DoesNotExistException"
					use="literal"></soap:fault>
			</fault>
			<fault name="DisabledIdentifierException">
				<soap:fault name="DisabledIdentifierException"
					use="literal"></soap:fault>
			</fault>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="fetchPersonAttributeSetType">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="DoesNotExistException">
				<soap:fault name="DoesNotExistException"
					use="literal"></soap:fault>
			</fault>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="assignPersonType">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="AlreadyExistsException">
				<soap:fault name="AlreadyExistsException"
					use="literal"></soap:fault>
			</fault>
			<fault name="DisabledIdentifierException">
				<soap:fault name="DisabledIdentifierException"
					use="literal"></soap:fault>
			</fault>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="createAttributeDefinition">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="AlreadyExistsException">
				<soap:fault name="AlreadyExistsException"
					use="literal"></soap:fault>
			</fault>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="createPersonTypeInfo">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="AlreadyExistsException">
				<soap:fault name="AlreadyExistsException"
					use="literal"></soap:fault>
			</fault>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="fetchFullPersonInfo">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="DoesNotExistException">
				<soap:fault name="DoesNotExistException"
					use="literal"></soap:fault>
			</fault>
			<fault name="DisabledIdentifierException">
				<soap:fault name="DisabledIdentifierException"
					use="literal"></soap:fault>
			</fault>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="fetchPersonInfoByPersonAttributeSetTypes">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="DoesNotExistException">
				<soap:fault name="DoesNotExistException"
					use="literal"></soap:fault>
			</fault>
			<fault name="DisabledIdentifierException">
				<soap:fault name="DisabledIdentifierException"
					use="literal"></soap:fault>
			</fault>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="fetchPersonInfoByPersonType">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="DoesNotExistException">
				<soap:fault name="DoesNotExistException"
					use="literal"></soap:fault>
			</fault>
			<fault name="DisabledIdentifierException">
				<soap:fault name="DisabledIdentifierException"
					use="literal"></soap:fault>
			</fault>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="findCreatablePersonTypes">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="findPersonAttributeSetTypesForPerson">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="DoesNotExistException">
				<soap:fault name="DoesNotExistException"
					use="literal"></soap:fault>
			</fault>
			<fault name="DisabledIdentifierException">
				<soap:fault name="DisabledIdentifierException"
					use="literal"></soap:fault>
			</fault>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="findPersonAttributeSetTypesForPersonType">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="DoesNotExistException">
				<soap:fault name="DoesNotExistException"
					use="literal"></soap:fault>
			</fault>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="findPersonIdsForPersonType">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="DoesNotExistException">
				<soap:fault name="DoesNotExistException"
					use="literal"></soap:fault>
			</fault>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="findPersonTypesForPerson">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="DoesNotExistException">
				<soap:fault name="DoesNotExistException"
					use="literal"></soap:fault>
			</fault>
			<fault name="DisabledIdentifierException">
				<soap:fault name="DisabledIdentifierException"
					use="literal"></soap:fault>
			</fault>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="isPersonType">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="DoesNotExistException">
				<soap:fault name="DoesNotExistException"
					use="literal"></soap:fault>
			</fault>
			<fault name="DisabledIdentifierException">
				<soap:fault name="DisabledIdentifierException"
					use="literal"></soap:fault>
			</fault>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="searchForPeopleByPersonType">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="validatePersonInfoForPersonType">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="DoesNotExistException">
				<soap:fault name="DoesNotExistException"
					use="literal"></soap:fault>
			</fault>
			<fault name="DisabledIdentifierException">
				<soap:fault name="DisabledIdentifierException"
					use="literal"></soap:fault>
			</fault>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="fetchReplacementPersonId">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="DoesNotExistException">
				<soap:fault name="DoesNotExistException"
					use="literal"></soap:fault>
			</fault>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="removePersonType">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="DoesNotExistException">
				<soap:fault name="DoesNotExistException"
					use="literal"></soap:fault>
			</fault>
			<fault name="DisabledIdentifierException">
				<soap:fault name="DisabledIdentifierException"
					use="literal"></soap:fault>
			</fault>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="searchForPeople">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="searchForPeopleByPersonAttributeSetType">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="searchForPersonIds">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="createPersonRelation">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="AlreadyExistsException">
				<soap:fault name="AlreadyExistsException"
					use="literal"></soap:fault>
			</fault>
			<fault name="DoesNotExistException">
				<soap:fault name="DoesNotExistException"
					use="literal"></soap:fault>
			</fault>
			<fault name="CircularReferenceException">
				<soap:fault name="CircularReferenceException"
					use="literal"></soap:fault>
			</fault>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="updatePersonRelation">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="DoesNotExistException">
				<soap:fault name="DoesNotExistException"
					use="literal"></soap:fault>
			</fault>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="ReadOnlyException">
				<soap:fault name="ReadOnlyException" use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="deletePersonRelation">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="DoesNotExistException">
				<soap:fault name="DoesNotExistException"
					use="literal"></soap:fault>
			</fault>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="fetchPersonRelation">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="DoesNotExistException">
				<soap:fault name="DoesNotExistException"
					use="literal"></soap:fault>
			</fault>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="fetchPersonRelationTypes">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="findPersonPersonRelationIds">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="DoesNotExistException">
				<soap:fault name="DoesNotExistException"
					use="literal"></soap:fault>
			</fault>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="findPersonRelations">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="DoesNotExistException">
				<soap:fault name="DoesNotExistException"
					use="literal"></soap:fault>
			</fault>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="searchForPersonIdsByRelation">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="searchForPersonRelations">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
		<operation name="searchForPeopleByRelation">
			<soap:operation soapAction=""></soap:operation>
			<input>
				<soap:body use="literal"></soap:body>
			</input>
			<output>
				<soap:body use="literal"></soap:body>
			</output>
			<fault name="InvalidParameterException">
				<soap:fault name="InvalidParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="MissingParameterException">
				<soap:fault name="MissingParameterException"
					use="literal"></soap:fault>
			</fault>
			<fault name="OperationFailedException">
				<soap:fault name="OperationFailedException"
					use="literal"></soap:fault>
			</fault>
			<fault name="PermissionDeniedException">
				<soap:fault name="PermissionDeniedException"
					use="literal"></soap:fault>
			</fault>
		</operation>
	</binding>
	<service name="PersonServiceSecure">
		<port name="PersonServiceSecure"
			binding="tns:PersonServiceSecureBinding">
			<soap:address
				location="http://localhost:9999/personidentity/PersonServiceSecure"></soap:address>
		</port>
	</service>

	<wsp:Policy wsu:Id="ClassBindingPolicy">
		<wsp:ExactlyOne>
			<wsp:All>
				<wsaws:UsingAddressing
					xmlns:wsaws="http://www.w3.org/2006/05/addressing/wsdl" />
				<sp:SymmetricBinding>
					<wsp:Policy>
						<sp:ProtectionToken>
							<wsp:Policy>
								<sp:X509Token
									sp:IncludeToken="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/Never">
									<wsp:Policy>
										<sp:WssX509V3Token10 />
									</wsp:Policy>
								</sp:X509Token>
							</wsp:Policy>
						</sp:ProtectionToken>
						<sp:Layout>
							<wsp:Policy>
								<sp:Strict />
							</wsp:Policy>
						</sp:Layout>
						<sp:IncludeTimestamp />
						<sp:AlgorithmSuite>
							<wsp:Policy>
								<sp:Basic128 />
							</wsp:Policy>
						</sp:AlgorithmSuite>
					</wsp:Policy>
				</sp:SymmetricBinding>
				<sp:Wss11>
					<wsp:Policy>
						<sp:MustSupportRefKeyIdentifier />
						<sp:MustSupportRefIssuerSerial />
						<sp:MustSupportRefThumbprint />
					</wsp:Policy>
				</sp:Wss11>
				<sp:SignedSupportingTokens>
					<wsp:Policy>
						<sp:UsernameToken
							sp:IncludeToken="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToRecipient">
							<wsp:Policy>
								<sp:WssUsernameToken10 />
							</wsp:Policy>
						</sp:UsernameToken>
					</wsp:Policy>
				</sp:SignedSupportingTokens>
				<sc:KeyStore wspp:visibility="private"
					alias="xws-security-server" location="keystore.jks"
					storepass="adminadmin" />

				<sc:ValidatorConfiguration>
					<sc:Validator name="usernameValidator"
						classname="org.kuali.student.poc.common.metro.security.PlainTextPasswordValidator" />
				</sc:ValidatorConfiguration>
			</wsp:All>
		</wsp:ExactlyOne>
	</wsp:Policy>
</definitions>