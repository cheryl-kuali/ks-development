<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:jee="http://www.springframework.org/schema/jee"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
      http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

  <context:annotation-config/>
  
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>
    
	<bean id="brmsDataSource"
		class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init"
		destroy-method="close">
		<property name="uniqueResourceName" value="brmsDataSource" />
		<property name="xaDataSourceClassName" value="${jdbc.xaDataSourceClassName}" />
		<property name="xaProperties">
			<props>
				<prop key="databaseName">
					${jdbc.brms.xaDataSourceProperties.databaseName}
				</prop>
				<prop key="user">
					${jdbc.brms.xaDataSourceProperties.user}
				</prop>
				<prop key="password">
					${jdbc.brms.xaDataSourceProperties.password}
				</prop>
				<prop key="createDatabase">
					${jdbc.brms.xaDataSourceProperties.createDatabase}
				</prop>
			</props>
		</property>
		<property name="maxPoolSize" value="20" />
	</bean>  
  
	<!-- JPA EntityManagerFactory -->
	<bean id="jpaConfig" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location" value="classpath:jpa.properties" />
	</bean>	
  
	<bean id="brmsEntityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="jpaVendorAdapter">
			<bean class="${jpa.adapter}">
				<property name="databasePlatform"
					value="${jpa.platform}" />
				<property name="showSql" value="${jpa.showSql}" />
				<property name="generateDdl" value="${jpa.generateDdl}" />
			</bean>
		</property>
		<property name="persistenceXmlLocation"
			value="classpath:META-INF/brms-persistence.xml" />
		<property name="dataSource" ref="brmsDataSource" />
		<property name="jpaPropertyMap" ref="jpaConfig" />
	</bean>  
	
	<bean id="AtomikosTxMgr"
		class="com.atomikos.icatch.jta.UserTransactionManager"
		init-method="init" destroy-method="close">
		<property name="forceShutdown" value="true" />
		<property name="startupTransactionService" value="true" />
		<property name="transactionTimeout" value="60" />
	</bean>

	<bean id="AtomikosUsrTx"
		class="com.atomikos.icatch.jta.UserTransactionImp" />

	<bean id="JtaTxManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager" ref="AtomikosTxMgr" />
		<property name="userTransaction" ref="AtomikosUsrTx" />
		<property name="transactionSynchronizationName"
			value="SYNCHRONIZATION_ON_ACTUAL_TRANSACTION" />
	</bean>

	<aop:aspectj-autoproxy proxy-target-class="true" />

	<tx:annotation-driven transaction-manager="JtaTxManager" />

	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />	
	
	<bean id="businessRuleDAO"  class="org.kuali.student.rules.brms.core.dao.impl.BusinessRuleDAOImpl">
	</bean>
	
	<bean id="ruleElementDAO"  class="org.kuali.student.rules.brms.core.dao.impl.RuleElementDAOImpl">
	</bean>
	
	<bean id="rulePropositionDAO"  class="org.kuali.student.rules.brms.core.dao.impl.RulePropositionDAOImpl">
	</bean>
	
	<bean id="yieldValueFunctionDAO"  class="org.kuali.student.rules.brms.core.dao.impl.YieldValueFunctionDAOImpl">
	</bean>
	
	<bean id="businessRuleManagementService"  class="org.kuali.student.rules.brms.core.service.BusinessRuleManagementService">
	<property name="businessRuleDAO" ref="businessRuleDAO"/>    
	</bean>
	
	<bean id="agendaDiscovery" class="org.kuali.student.rules.brms.agenda.AgendaDiscovery">
	<property name="ruleMgmtService" ref="businessRuleManagementService"/>
	</bean>
  
	<!--bean id="droolsRepository" class="org.kuali.student.rules.repository.drools.RuleEngineRepositoryDroolsImpl">
		<constructor-arg type="org.drools.repository.RulesRepository" ref="rulesRepository"/>
	</bean>

	<bean id="defaultDroolsRepositoryContainer" class="org.kuali.student.rules.repository.drools.DefaultDroolsRepository"
		  destroy-method="shutdown">
		<constructor-arg type="java.lang.String" value="/drools-repository"/>
	</bean>
	
	<bean id="rulesRepository"
      factory-bean="defaultDroolsRepositoryContainer"
      factory-method="getRepository"/-->
     
	<!-- Exception translation bean post processor -->
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

	<bean id="loadDataBean" class="org.kuali.student.rules.brms.core.util.LoadDataBean">
		<property name="contextLocation"	value="classpath:test-beans.xml" />
	</bean>

	<bean id="loadBeanListener" class="org.kuali.student.rules.brms.core.util.LoadBeanListener">
		<property name="ldb" ref="loadDataBean" />
	</bean>

</beans>	

