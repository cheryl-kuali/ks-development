<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:jee="http://www.springframework.org/schema/jee"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
      http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

  <context:annotation-config/>
  
  <bean id="functionalBusinessRuleDAO"  class="org.kuali.student.rules.brms.core.dao.impl.FunctionalBusinessRuleDAOImpl">
  </bean>

  <bean id="ruleElementDAO"  class="org.kuali.student.rules.brms.core.dao.impl.RuleElementDAOImpl">
   	<property name="entityManagerFactory" ref="functionalBusinessRuleEntityManagerFactory"/>
  </bean>
  
  <bean id="rulePropositionDAO"  class="org.kuali.student.rules.brms.core.dao.impl.RulePropositionDAOImpl">
    <property name="entityManagerFactory" ref="functionalBusinessRuleEntityManagerFactory"/>
  </bean>

  <bean id="computationAssistantDAO"  class="org.kuali.student.rules.brms.core.dao.impl.ComputationAssistantDAOImpl">
    <property name="entityManagerFactory" ref="functionalBusinessRuleEntityManagerFactory"/>
  </bean>

  <bean id="FunctionalBusinessRuleManagementService"  class="org.kuali.student.rules.brms.core.service.FunctionalBusinessRuleManagementService">
    <property name="businessRuleDAO" ref="functionalBusinessRuleDAO"/>    
  </bean>

  <bean id="agendaDiscovery" class="org.kuali.student.rules.brms.agenda.AgendaDiscovery">
  	<property name="ruleMgmtService" ref="FunctionalBusinessRuleManagementService"/>
  </bean>
  
  <!-- JPA EntityManagerFactory -->
  <bean id="jpaConfig" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
    <property name="location" value="classpath:jpa.properties" />
  </bean>	
	
	<bean id="functionalBusinessRuleEntityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="myDataSource"/>
		<property name="jpaVendorAdapter">
		   <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
			 <property name="showSql" value="true" />
			 <property name="generateDdl" value="true" />
			 <property name="databasePlatform" value="org.hibernate.dialect.DerbyDialect"/>
		   </bean>
		</property>
    	<property name="jpaPropertyMap" ref="jpaConfig" />			
	 </bean>	

	<bean id="droolsRepository" class="org.kuali.student.brms.repository.drools.RuleEngineRepositoryDroolsImpl">
		<constructor-arg type="org.drools.repository.RulesRepository" 
					ref="rulesRepository"/>
	</bean>

	<bean id="defaultDroolsRepositoryContainer" class="org.kuali.student.brms.repository.drools.DefaultDroolsRepository"
		  destroy-method="shutdown">
		<constructor-arg type="java.lang.String" value="/repository"/>
	</bean>
	
	<bean id="rulesRepository"
      factory-bean="defaultDroolsRepositoryContainer"
      factory-method="getRepository"/>
     
     
	<bean id="myDataSource"	class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.apache.derby.jdbc.EmbeddedDriver" />
		<property name="url" value="jdbc:derby:BRMSMetadataDB;create=true;" />
		<property name="username" value="Zdenek" />
		<property name="password" value="" />
	</bean>
 
  <bean id="AtomikosTxMgr"
    class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
    <property name="forceShutdown" value="true" />
    <property name="startupTransactionService" value="true" />
    <property name="transactionTimeout" value="60" />
  </bean>

  <bean id="AtomikosUsrTx"
    class="com.atomikos.icatch.jta.UserTransactionImp" />
 
  <bean id="JtaTxManager" class="org.springframework.transaction.jta.JtaTransactionManager">
    <property name="transactionManager" ref="AtomikosTxMgr" />
    <property name="userTransaction" ref="AtomikosUsrTx" />
    <property name="transactionSynchronizationName" value="SYNCHRONIZATION_ON_ACTUAL_TRANSACTION" />
  </bean>
 
  <tx:annotation-driven transaction-manager="JtaTxManager" />

  <!-- bean post-processor for JPA annotations -->
  <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

  <!-- Exception translation bean post processor -->
  <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

</beans>	

