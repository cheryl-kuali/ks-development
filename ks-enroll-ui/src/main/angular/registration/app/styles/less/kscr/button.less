/**** Button Styles *****/

// Base button
.kscr-Button {
    .kscr-Button-common-gradient(@btnBaseBg1, @btnBaseBg2, @btnBaseBorder, @btnBaseText);
    .kscr-Button-hover(@btnBaseBg1-hover, @btnBaseBg2-hover, @btnBaseBorder-hover, @btnBaseText-hover);
    .kscr-Button-pressed(@btnBaseBg1-pressed, @btnBaseBg2-pressed, @btnBaseBorder-pressed, @btnBaseText-pressed);
    .kscr-Button-disabled(@btnBaseBg1-disabled, @btnBaseBg2-disabled, @btnBaseBorder-disabled, @btnBaseText-disabled);
}


// Primary Button
.kscr-Button--primary {
    .kscr-Button-common-gradient(@btnPrimaryBg1, @btnPrimaryBg2, @btnPrimaryBorder, @btnPrimaryText);
    .kscr-Button-hover(@btnPrimaryBg1-hover, @btnPrimaryBg2-hover, @btnPrimaryBorder-hover, @btnPrimaryText-hover);
    .kscr-Button-pressed(@btnPrimaryBg1-pressed, @btnPrimaryBg2-pressed, @btnPrimaryBorder-pressed, @btnPrimaryText-pressed);
    .kscr-Button-disabled(@btnPrimaryBg1-disabled, @btnPrimaryBg2-disabled, @btnPrimaryBorder-disabled, @btnPrimaryText-disabled);

    font-weight: bold;
}


// Outline button
.kscr-Button--outline {
    .kscr-Button-common(@whiteBackground, @btnBaseBorder, @btnBaseText);

    border-bottom-width: 1px;
}


// Button Group
.kscr-Button-group {
    position: relative; // For dropmenus

    > .kscr-Button {
        display: inline-block;

        &:focus {
            outline: 0;
        }
    }

    .dropdown-toggle {
        // Cut the padding down a bit
        padding-left: 0.8rem;
        padding-right: 0.8rem;

        .caret {
            // The caret is purely borders, to change the size we only need to alter the border-width.
            border-width: 6px;
            margin-left: 0;
        }
    }

    &.open > .dropdown-toggle {
        // Put a shadow in the dropdown toggle when the menu is open
        .box-shadow(inset 0 3px 5px rgba(0, 0, 0, 0.125));
    }

    .kscr-Button + .kscr-Button { // Prevent double borders
        border-left: none;
    }

    // Clear the right border from all but the last element
    // Need .dropdown-toggle since :last-child doesn't apply given a .dropdown-menu immediately after it
    > *:not(:last-child):not(.dropdown-toggle) {
        .border-right-radius(0);
    }

    // Clear the left border-radius from the last element
    > *:last-child:not(:first-child),
    .dropdown-toggle:not(:first-child) {
        .border-left-radius(0);
    }

    // Clear the border-radius for all but the first and last element
    > *:not(:first-child):not(:last-child):not(.dropdown-toggle) {
        border-radius: 0;
    }
}

//Override of Bootstrap class related to dropdown-toggle
.dropdown-menu {
  min-width: 100%;
  margin: 0;

  & > li > a {

    padding: 0.5rem 1rem;
  }
}



// Common button styles mixin
.kscr-Button-common(@bg, @border, @text) {
    background: @bg;

    border: 1px solid @border;
    border-bottom-width: 2px;
    .Rounded(@buttonRadius);

    color: @text;

    font-family: @secondaryFontFamily;
    .font-size(13);

    padding: 0.5rem 1rem;

    &:active:not([disabled]):not(:disabled),
    &.active:not([disabled]):not(:disabled) {
        outline: 0;
        .box-shadow(inset 0 3px 5px rgba(0,0,0,.125));
    }
}

// Button Mixin for gradient background
.kscr-Button-common-gradient(@bg1, @bg2, @border, @text) {
    .kscr-Button-common(@bg1, @border, @text); // Call the base mixin
    .linear-gradient(@bg1, @bg2);
}

// Hover mixin
.kscr-Button-hover(@bg1, @bg2, @border, @text) {
    &:hover {
        .linear-gradient(@bg1, @bg2);
        border-color: @border;
        color: @text;
    }
}

// Pressed mixin
.kscr-Button-pressed(@bg1, @bg2, @border, @text) {
    &:active:not([disabled]):not(:disabled),
    &.active:not([disabled]):not(:disabled) {
        .linear-gradient(@bg1, @bg2);
        border-color: @border;
        color: @text;
    }
}

// Disabled mixin
.kscr-Button-disabled(@bg1, @bg2, @border, @text) {
    &[disabled], &:disabled {
        .linear-gradient(@bg1, @bg2);
        border-color: @border;
        color: @text;
    }
}