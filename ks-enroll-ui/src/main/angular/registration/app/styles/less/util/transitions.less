// Transition styles
@transitionSpeed:                0.25s;
@transition:                    all linear @transitionSpeed;

/**
 * Transition Mixin
 * @param @speed Speed with which to perform the transition (e.g. 2s). Defaults to @transitionSpeed value.
 */
.util-transitions-browserHelper(@speed: @transitionSpeed) {
    // Reset the local instance of the @transitionSpeed to the @speed parameter so it will be used in the @transition var
    @transitionSpeed: @speed;
    .util-transitions-transition(@transition);
}


/**
 * Full transition mixin
 * @param @transition Transition value: See https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_CSS_transitions
 */
.util-transitions-transition(@transition) {
    -webkit-transition: @transition;
    -moz-transition: @transition;
    -o-transition: @transition;
    transition: @transition;
}



// Slide & Fade In & Out - Requires height to be set
// Only supports ng-if & ng-repeat transitions currently
.util-transition-slideFade(@height, @speed: @transitionSpeed) {

    &.ng-enter, // Item added though ng-repeat (base styles)
    &.ng-leave.ng-leave-active { // Item actively being removed (target styles)
        .util-transitions-transition(all ease-out @speed);

        height: 0px;
        opacity: 0;
    }

    &.ng-leave, // Item being removed (base styles)
    &.ng-enter.ng-enter-active { // Item actively being added (target styles)
        .util-transitions-transition(all ease-in @speed);

        height: @height;
        opacity: 1;
    }
}



// Fade In & Out
// Only supports ng-if & ng-repeat transitions currently
.util-transition-fade(@speed: @transitionSpeed, @opacity: 1) {

    &.ng-enter, // Item added though ng-repeat (base styles)
    &.ng-leave.ng-leave-active { // Item actively being removed (target styles)
        .util-transitions-transition(all ease-out @speed);
        opacity: 0;
    }

    &.ng-leave, // Item being removed (base styles)
    &.ng-enter.ng-enter-active { // Item actively being added (target styles)
        .util-transitions-transition(all ease-in @speed);
        opacity: @opacity;
    }
}

// Fade in new item (200ms, ease out cubic)
// Move existing items down (200ms, ease out cubic)
.util-transitions-addCard(@targetHeight, @speed: 200ms) {
  &.ng-enter // Item added through ng-repeat (base styles)
  {
    .util-transitions-transition(all cubic-bezier(0.215, 0.610, 0.355, 1.000) @speed);
    position: relative;
    display: block;
    overflow: visible;
    opacity: 0;
    height: 0;
  }

  &.ng-enter-active { //Item actively being added (target styles)
    .util-transitions-transition(all cubic-bezier(0.215, 0.610, 0.355, 1.000) @speed);
    opacity: 1;
    height: @targetHeight;
  }

}

// Fade out removed item (200ms, ease out cubic)
// Move existing items up (200ms, ease out cubic)
.util-transitions-removeCard(@targetHeight, @speed: 200ms) {
    &.ng-leave{ // Item being removed (base styles)
      .util-transitions-transition(all cubic-bezier(0.215, 0.610, 0.355, 1.000) @speed);
      position: relative;
      display: block;
      overflow: hidden;
      height: @targetHeight;
      opacity: 1;
    }

    &.ng-leave-active { // Item actively being removed (target styles)
      .util-transitions-transition(all cubic-bezier(0.215, 0.610, 0.355, 1.000) @speed);
      opacity: 0;
      height: 0;
    }
}

// Page load transition
.util-transitions-pageLoad() {
  @pgLoadAnimationName: rippleAnimation;
  @pgLoadAnimationDuration: 1s;
  @pgLoadAnimationTimingFunction: linear;
  @pgLoadAnimationIterationCount: infinite;
  @pgLoadAnimationFillMode: forwards;

  -webkit-animation: @pgLoadAnimationName @pgLoadAnimationDuration @pgLoadAnimationTimingFunction @pgLoadAnimationIterationCount @pgLoadAnimationFillMode;
  -moz-animation: @pgLoadAnimationName @pgLoadAnimationDuration @pgLoadAnimationTimingFunction @pgLoadAnimationIterationCount @pgLoadAnimationFillMode;
  -o-animation: @pgLoadAnimationName @pgLoadAnimationDuration @pgLoadAnimationTimingFunction @pgLoadAnimationIterationCount @pgLoadAnimationFillMode;
  -animation: @pgLoadAnimationName @pgLoadAnimationDuration @pgLoadAnimationTimingFunction @pgLoadAnimationIterationCount @pgLoadAnimationFillMode;

  @pgLoadAnimationDarkerColor: #f6f7f8; // Based on FB news feed animation
  @pgLoadAnimationLighterColor: #edeef1;

  background: @pgLoadAnimationDarkerColor;
  background-image: -webkit-linear-gradient(left, @pgLoadAnimationDarkerColor 0%, @pgLoadAnimationLighterColor 20%, @pgLoadAnimationDarkerColor 40%, @pgLoadAnimationDarkerColor 100%); // syntax from https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_CSS_gradients
  background-image: -moz-linear-gradient(left, @pgLoadAnimationDarkerColor 0%, @pgLoadAnimationLighterColor 20%, @pgLoadAnimationDarkerColor 40%, @pgLoadAnimationDarkerColor 100%);
  background-image: -o-linear-gradient(left, @pgLoadAnimationDarkerColor 0%, @pgLoadAnimationLighterColor 20%, @pgLoadAnimationDarkerColor 40%, @pgLoadAnimationDarkerColor 100%);
  background-image: linear-gradient(to right, @pgLoadAnimationDarkerColor 0%, @pgLoadAnimationLighterColor 20%, @pgLoadAnimationDarkerColor 40%, @pgLoadAnimationDarkerColor 100%);
  background-repeat: no-repeat;
  background-size: 80rem 1rem;
  position: relative;
}
