/*
 * Copyright 2007 The Kuali Foundation
 *
 * Licensed under the Educational Community License, Version 1.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.opensource.org/licenses/ecl1.php
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.kuali.student.rules.course_co_req.Intermediate_CPR

import java.util.*;
import org.kuali.student.rules.statement.*;
import org.kuali.student.rules.common.util.CourseEnrollmentRequest;
import org.kuali.student.rules.util.FactContainer;

rule "Intermediate_CPR_INIT"
    salience 2147483647
    no-loop true
    lock-on-active true
    when
        cont : FactContainer( id == "Math101", prop : propositionContainer, req : request )
        //prop : PropositionContainer()
        //req: CourseEnrollmentRequest()
    then
        System.out.println("Math101-init");
        SubsetProposition propositionA = new SubsetProposition("A", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CPR101".split("\\s*,\\s*"))),  req.getLuiIds() );
        propositionA.apply();
        prop.addProposition(propositionA);

        SubsetProposition propositionB = new SubsetProposition("B", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM101".split("\\s*,\\s*"))),  req.getLuiIds() );
        propositionB.apply();
        prop.addProposition(propositionB);

        SubsetProposition propositionC = new SubsetProposition("C", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH102".split("\\s*,\\s*"))),  req.getLuiIds() );
        propositionC.apply();
        prop.addProposition(propositionC);

        update(cont);
end

rule "Intermediate_CPR"
    no-loop true
    when
        FactContainer( id == "Math101", prop : propositionContainer )
        //prop : PropositionContainer( size == 3 )
        
        ( Proposition( propositionName == "A" && result == true ) from prop.propositions
        and
        Proposition( propositionName == "B" && result == true ) from prop.propositions )
        or
        Proposition( propositionName == "C" && result == true ) from prop.propositions 

        //eval (
        //    ( ( prop.getProposition("A") != null && prop.getProposition("A").getResult() )
        //    ||
        //    ( prop.getProposition("B") != null && prop.getProposition("B").getResult() ) )
        //    &&
        //    ( prop.getProposition("C") != null && prop.getProposition("C").getResult() )
        //)
    then
        System.out.println("Math101-enrolment");
        System.out.println("A="+prop.getProposition("A").getResult() );
        System.out.println("B="+prop.getProposition("B").getResult() );
        System.out.println("C="+prop.getProposition("C").getResult() );
        prop.setRuleResult(true);
end
