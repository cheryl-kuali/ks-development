<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="RuleRepositoryService" targetNamespace="http://student.kuali.org/wsdl/brms/RuleRepository" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://student.kuali.org/wsdl/brms/RuleRepository" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://student.kuali.org/wsdl/brms/RuleRepository" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/brms/RuleRepository">
    <xs:element name="categoryDTO" type="tns:categoryDTO"/>
    <xs:element name="checkinRule" type="tns:checkinRule"/>
    <xs:element name="checkinRuleResponse" type="tns:checkinRuleResponse"/>
    <xs:element name="checkinRuleSet" type="tns:checkinRuleSet"/>
    <xs:element name="checkinRuleSetResponse" type="tns:checkinRuleSetResponse"/>
    <xs:element name="createCategory" type="tns:createCategory"/>
    <xs:element name="createCategoryResponse" type="tns:createCategoryResponse"/>
    <xs:element name="createRuleSet" type="tns:createRuleSet"/>
    <xs:element name="createRuleSetResponse" type="tns:createRuleSetResponse"/>
    <xs:element name="createRuleSetSnapshot" type="tns:createRuleSetSnapshot"/>
    <xs:element name="createRuleSetSnapshotResponse" type="tns:createRuleSetSnapshotResponse"/>
    <xs:element name="loadChildCategories" type="tns:loadChildCategories"/>
    <xs:element name="loadChildCategoriesResponse" type="tns:loadChildCategoriesResponse"/>
    <xs:element name="loadCompiledRuleSet" type="tns:loadCompiledRuleSet"/>
    <xs:element name="loadCompiledRuleSetResponse" type="tns:loadCompiledRuleSetResponse"/>
    <xs:element name="loadCompiledRuleSetSnapshot" type="tns:loadCompiledRuleSetSnapshot"/>
    <xs:element name="loadCompiledRuleSetSnapshotResponse" type="tns:loadCompiledRuleSetSnapshotResponse"/>
    <xs:element name="loadRule" type="tns:loadRule"/>
    <xs:element name="loadRuleResponse" type="tns:loadRuleResponse"/>
    <xs:element name="loadRuleSet" type="tns:loadRuleSet"/>
    <xs:element name="loadRuleSetResponse" type="tns:loadRuleSetResponse"/>
    <xs:element name="removeRuleSet" type="tns:removeRuleSet"/>
    <xs:element name="removeRuleSetResponse" type="tns:removeRuleSetResponse"/>
    <xs:element name="removeRuleSetSnapshot" type="tns:removeRuleSetSnapshot"/>
    <xs:element name="removeRuleSetSnapshotResponse" type="tns:removeRuleSetSnapshotResponse"/>
    <xs:element name="replaceRuleSetSnapshot" type="tns:replaceRuleSetSnapshot"/>
    <xs:element name="replaceRuleSetSnapshotResponse" type="tns:replaceRuleSetSnapshotResponse"/>
    <xs:element name="ruleDTO" type="tns:ruleDTO"/>
    <xs:element name="updateRule" type="tns:updateRule"/>
    <xs:element name="updateRuleResponse" type="tns:updateRuleResponse"/>
    <xs:element name="updateRuleSet" type="tns:updateRuleSet"/>
    <xs:element name="updateRuleSetResponse" type="tns:updateRuleSetResponse"/>
    <xs:complexType name="replaceRuleSetSnapshot">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSetName" type="xs:string"/>
            <xs:element minOccurs="0" name="snapshotName" type="xs:string"/>
            <xs:element minOccurs="0" name="comment" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="replaceRuleSetSnapshotResponse">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="createRuleSetSnapshot">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSetName" type="xs:string"/>
            <xs:element minOccurs="0" name="snapshotName" type="xs:string"/>
            <xs:element minOccurs="0" name="comment" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createRuleSetSnapshotResponse">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="updateRuleSet">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSet" type="tns:ruleSetDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="ruleSetDTO">
        <xs:complexContent>
            <xs:extension base="tns:abstractItemDTO">
                <xs:sequence>
                    <xs:element minOccurs="0" name="rules" type="tns:ruleMapType"/>
                    <xs:element minOccurs="0" name="compiledRuleSet" type="xs:base64Binary"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="header" type="xs:string"/>
                    <xs:element name="snapshot" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="snapshotName" type="xs:string"/>
                    <xs:element minOccurs="0" name="sourceContent" type="xs:string"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType abstract="true" name="abstractItemDTO">
        <xs:sequence>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="description" type="xs:string"/>
            <xs:element name="format" type="xs:string"/>
            <xs:element name="versionNumber" type="xs:long"/>
            <xs:element minOccurs="0" name="status" type="xs:string"/>
            <xs:element minOccurs="0" name="versionSnapshotUUID" type="xs:string"/>
            <xs:element minOccurs="0" name="createdDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="lastModifiedDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="checkinComment" type="xs:string"/>
            <xs:element name="archived" type="xs:boolean"/>
            <xs:element name="historical" type="xs:boolean"/>
        </xs:sequence>
        <xs:attribute name="uuid" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="ruleMapType">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="updateRuleSetResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:ruleSetDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="checkinRuleSet">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSetUUID" type="xs:string"/>
            <xs:element minOccurs="0" name="comment" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="checkinRuleSetResponse">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="createCategory">
        <xs:sequence>
            <xs:element minOccurs="0" name="path" type="xs:string"/>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="description" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createCategoryResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="removeRuleSetSnapshot">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSetName" type="xs:string"/>
            <xs:element minOccurs="0" name="snapshotName" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="removeRuleSetSnapshotResponse">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="loadRule">
        <xs:sequence>
            <xs:element minOccurs="0" name="uuid" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="loadRuleResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:ruleDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="ruleDTO">
        <xs:complexContent>
            <xs:extension base="tns:abstractItemDTO">
                <xs:sequence>
                    <xs:element minOccurs="0" name="binaryContent" type="xs:base64Binary"/>
                    <xs:element minOccurs="0" name="content" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="categoryNameList" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="categoryList" type="tns:categoryDTO"/>
                    <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="expiryDate" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="ruleSetUUID" type="xs:string"/>
                    <xs:element minOccurs="0" name="ruleSetName" type="xs:string"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="categoryDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="path" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="createRuleSet">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSet" type="tns:ruleSetDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createRuleSetResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:ruleSetDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="removeRuleSet">
        <xs:sequence>
            <xs:element minOccurs="0" name="uuid" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="removeRuleSetResponse">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="loadCompiledRuleSet">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSetUUID" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="loadCompiledRuleSetResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:base64Binary"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="loadChildCategories">
        <xs:sequence>
            <xs:element minOccurs="0" name="path" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="loadChildCategoriesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateRule">
        <xs:sequence>
            <xs:element minOccurs="0" name="rule" type="tns:ruleDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateRuleResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:ruleDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="loadRuleSet">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSetUUID" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="loadRuleSetResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:ruleSetDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="loadCompiledRuleSetSnapshot">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSetName" type="xs:string"/>
            <xs:element minOccurs="0" name="snapshotName" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="loadCompiledRuleSetSnapshotResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:base64Binary"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="checkinRule">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleUUID" type="xs:string"/>
            <xs:element minOccurs="0" name="comment" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="checkinRuleResponse">
        <xs:sequence/>
    </xs:complexType>
    <xs:element name="RuleEngineRepositoryException" type="tns:RuleEngineRepositoryException"/>
    <xs:complexType name="RuleEngineRepositoryException">
        <xs:sequence/>
    </xs:complexType>
    <xs:element name="CategoryExistsException" type="tns:CategoryExistsException"/>
    <xs:complexType name="CategoryExistsException">
        <xs:sequence/>
    </xs:complexType>
    <xs:element name="RuleExistsException" type="tns:RuleExistsException"/>
    <xs:complexType name="RuleExistsException">
        <xs:sequence/>
    </xs:complexType>
    <xs:element name="RuleSetExistsException" type="tns:RuleSetExistsException"/>
    <xs:complexType name="RuleSetExistsException">
        <xs:sequence/>
    </xs:complexType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="updateRuleResponse">
    <wsdl:part name="parameters" element="tns:updateRuleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="replaceRuleSetSnapshot">
    <wsdl:part name="parameters" element="tns:replaceRuleSetSnapshot">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRuleSet">
    <wsdl:part name="parameters" element="tns:createRuleSet">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="loadCompiledRuleSet">
    <wsdl:part name="parameters" element="tns:loadCompiledRuleSet">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeRuleSet">
    <wsdl:part name="parameters" element="tns:removeRuleSet">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="loadCompiledRuleSetSnapshot">
    <wsdl:part name="parameters" element="tns:loadCompiledRuleSetSnapshot">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkinRule">
    <wsdl:part name="parameters" element="tns:checkinRule">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createCategoryResponse">
    <wsdl:part name="parameters" element="tns:createCategoryResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="loadRuleResponse">
    <wsdl:part name="parameters" element="tns:loadRuleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateRule">
    <wsdl:part name="parameters" element="tns:updateRule">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="RuleEngineRepositoryException">
    <wsdl:part name="RuleEngineRepositoryException" element="tns:RuleEngineRepositoryException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="loadRule">
    <wsdl:part name="parameters" element="tns:loadRule">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="loadRuleSet">
    <wsdl:part name="parameters" element="tns:loadRuleSet">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="CategoryExistsException">
    <wsdl:part name="CategoryExistsException" element="tns:CategoryExistsException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateRuleSet">
    <wsdl:part name="parameters" element="tns:updateRuleSet">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkinRuleResponse">
    <wsdl:part name="parameters" element="tns:checkinRuleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRuleSetSnapshot">
    <wsdl:part name="parameters" element="tns:createRuleSetSnapshot">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="loadChildCategoriesResponse">
    <wsdl:part name="parameters" element="tns:loadChildCategoriesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="loadCompiledRuleSetResponse">
    <wsdl:part name="parameters" element="tns:loadCompiledRuleSetResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="loadChildCategories">
    <wsdl:part name="parameters" element="tns:loadChildCategories">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRuleSetResponse">
    <wsdl:part name="parameters" element="tns:createRuleSetResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="RuleExistsException">
    <wsdl:part name="RuleExistsException" element="tns:RuleExistsException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="RuleSetExistsException">
    <wsdl:part name="RuleSetExistsException" element="tns:RuleSetExistsException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRuleSetSnapshotResponse">
    <wsdl:part name="parameters" element="tns:createRuleSetSnapshotResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeRuleSetSnapshotResponse">
    <wsdl:part name="parameters" element="tns:removeRuleSetSnapshotResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="loadCompiledRuleSetSnapshotResponse">
    <wsdl:part name="parameters" element="tns:loadCompiledRuleSetSnapshotResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createCategory">
    <wsdl:part name="parameters" element="tns:createCategory">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="loadRuleSetResponse">
    <wsdl:part name="parameters" element="tns:loadRuleSetResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateRuleSetResponse">
    <wsdl:part name="parameters" element="tns:updateRuleSetResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeRuleSetSnapshot">
    <wsdl:part name="parameters" element="tns:removeRuleSetSnapshot">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="replaceRuleSetSnapshotResponse">
    <wsdl:part name="parameters" element="tns:replaceRuleSetSnapshotResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkinRuleSetResponse">
    <wsdl:part name="parameters" element="tns:checkinRuleSetResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkinRuleSet">
    <wsdl:part name="parameters" element="tns:checkinRuleSet">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeRuleSetResponse">
    <wsdl:part name="parameters" element="tns:removeRuleSetResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="RuleRepositoryService">
    <wsdl:operation name="replaceRuleSetSnapshot">
      <wsdl:input name="replaceRuleSetSnapshot" message="tns:replaceRuleSetSnapshot">
    </wsdl:input>
      <wsdl:output name="replaceRuleSetSnapshotResponse" message="tns:replaceRuleSetSnapshotResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createRuleSetSnapshot">
      <wsdl:input name="createRuleSetSnapshot" message="tns:createRuleSetSnapshot">
    </wsdl:input>
      <wsdl:output name="createRuleSetSnapshotResponse" message="tns:createRuleSetSnapshotResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateRuleSet">
      <wsdl:input name="updateRuleSet" message="tns:updateRuleSet">
    </wsdl:input>
      <wsdl:output name="updateRuleSetResponse" message="tns:updateRuleSetResponse">
    </wsdl:output>
      <wsdl:fault name="RuleEngineRepositoryException" message="tns:RuleEngineRepositoryException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkinRuleSet">
      <wsdl:input name="checkinRuleSet" message="tns:checkinRuleSet">
    </wsdl:input>
      <wsdl:output name="checkinRuleSetResponse" message="tns:checkinRuleSetResponse">
    </wsdl:output>
      <wsdl:fault name="RuleEngineRepositoryException" message="tns:RuleEngineRepositoryException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createCategory">
      <wsdl:input name="createCategory" message="tns:createCategory">
    </wsdl:input>
      <wsdl:output name="createCategoryResponse" message="tns:createCategoryResponse">
    </wsdl:output>
      <wsdl:fault name="CategoryExistsException" message="tns:CategoryExistsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRuleSetSnapshot">
      <wsdl:input name="removeRuleSetSnapshot" message="tns:removeRuleSetSnapshot">
    </wsdl:input>
      <wsdl:output name="removeRuleSetSnapshotResponse" message="tns:removeRuleSetSnapshotResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="loadRule">
      <wsdl:input name="loadRule" message="tns:loadRule">
    </wsdl:input>
      <wsdl:output name="loadRuleResponse" message="tns:loadRuleResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createRuleSet">
      <wsdl:input name="createRuleSet" message="tns:createRuleSet">
    </wsdl:input>
      <wsdl:output name="createRuleSetResponse" message="tns:createRuleSetResponse">
    </wsdl:output>
      <wsdl:fault name="RuleExistsException" message="tns:RuleExistsException">
    </wsdl:fault>
      <wsdl:fault name="RuleSetExistsException" message="tns:RuleSetExistsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRuleSet">
      <wsdl:input name="removeRuleSet" message="tns:removeRuleSet">
    </wsdl:input>
      <wsdl:output name="removeRuleSetResponse" message="tns:removeRuleSetResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="loadCompiledRuleSet">
      <wsdl:input name="loadCompiledRuleSet" message="tns:loadCompiledRuleSet">
    </wsdl:input>
      <wsdl:output name="loadCompiledRuleSetResponse" message="tns:loadCompiledRuleSetResponse">
    </wsdl:output>
      <wsdl:fault name="RuleEngineRepositoryException" message="tns:RuleEngineRepositoryException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="loadChildCategories">
      <wsdl:input name="loadChildCategories" message="tns:loadChildCategories">
    </wsdl:input>
      <wsdl:output name="loadChildCategoriesResponse" message="tns:loadChildCategoriesResponse">
    </wsdl:output>
      <wsdl:fault name="CategoryExistsException" message="tns:CategoryExistsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRule">
      <wsdl:input name="updateRule" message="tns:updateRule">
    </wsdl:input>
      <wsdl:output name="updateRuleResponse" message="tns:updateRuleResponse">
    </wsdl:output>
      <wsdl:fault name="RuleEngineRepositoryException" message="tns:RuleEngineRepositoryException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="loadRuleSet">
      <wsdl:input name="loadRuleSet" message="tns:loadRuleSet">
    </wsdl:input>
      <wsdl:output name="loadRuleSetResponse" message="tns:loadRuleSetResponse">
    </wsdl:output>
      <wsdl:fault name="RuleEngineRepositoryException" message="tns:RuleEngineRepositoryException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="loadCompiledRuleSetSnapshot">
      <wsdl:input name="loadCompiledRuleSetSnapshot" message="tns:loadCompiledRuleSetSnapshot">
    </wsdl:input>
      <wsdl:output name="loadCompiledRuleSetSnapshotResponse" message="tns:loadCompiledRuleSetSnapshotResponse">
    </wsdl:output>
      <wsdl:fault name="RuleEngineRepositoryException" message="tns:RuleEngineRepositoryException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkinRule">
      <wsdl:input name="checkinRule" message="tns:checkinRule">
    </wsdl:input>
      <wsdl:output name="checkinRuleResponse" message="tns:checkinRuleResponse">
    </wsdl:output>
      <wsdl:fault name="RuleEngineRepositoryException" message="tns:RuleEngineRepositoryException">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="RuleRepositoryServiceServiceSoapBinding" type="tns:RuleRepositoryService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="replaceRuleSetSnapshot">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="replaceRuleSetSnapshot">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="replaceRuleSetSnapshotResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createRuleSetSnapshot">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createRuleSetSnapshot">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createRuleSetSnapshotResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateRuleSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateRuleSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateRuleSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RuleEngineRepositoryException">
        <soap:fault name="RuleEngineRepositoryException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkinRuleSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="checkinRuleSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="checkinRuleSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RuleEngineRepositoryException">
        <soap:fault name="RuleEngineRepositoryException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createCategory">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createCategory">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createCategoryResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="CategoryExistsException">
        <soap:fault name="CategoryExistsException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRuleSetSnapshot">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeRuleSetSnapshot">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeRuleSetSnapshotResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="loadRule">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="loadRule">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="loadRuleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createRuleSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createRuleSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createRuleSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RuleExistsException">
        <soap:fault name="RuleExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RuleSetExistsException">
        <soap:fault name="RuleSetExistsException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRuleSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeRuleSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeRuleSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="loadCompiledRuleSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="loadCompiledRuleSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="loadCompiledRuleSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RuleEngineRepositoryException">
        <soap:fault name="RuleEngineRepositoryException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="loadChildCategories">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="loadChildCategories">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="loadChildCategoriesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="CategoryExistsException">
        <soap:fault name="CategoryExistsException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="loadRuleSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="loadRuleSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="loadRuleSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RuleEngineRepositoryException">
        <soap:fault name="RuleEngineRepositoryException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRule">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateRule">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateRuleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RuleEngineRepositoryException">
        <soap:fault name="RuleEngineRepositoryException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkinRule">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="checkinRule">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="checkinRuleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RuleEngineRepositoryException">
        <soap:fault name="RuleEngineRepositoryException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="loadCompiledRuleSetSnapshot">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="loadCompiledRuleSetSnapshot">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="loadCompiledRuleSetSnapshotResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RuleEngineRepositoryException">
        <soap:fault name="RuleEngineRepositoryException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RuleRepositoryService">
    <wsdl:port name="RuleRepositoryServicePort" binding="tns:RuleRepositoryServiceServiceSoapBinding">
      <soap:address location="http://localhost:9090/RuleRepositoryServicePort"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
